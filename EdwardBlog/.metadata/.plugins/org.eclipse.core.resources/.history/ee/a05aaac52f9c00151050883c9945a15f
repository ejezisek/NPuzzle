package generatePatternDatabase;


import java.util.Comparator;
import java.util.PriorityQueue;

import ed.util.algorithms.Action;

public class FifteenSquareDisjointMain_2 {


    static long index=0;

	public static void main(String[] args) {

		byte[] vals={9,9,9,9,
					9,1,2,3,
					9,4,5,6,
					9,7,8,0};
		//		byte[] vals={1,2,3,4,5,6,7,8,0};

    	int[] availableValues={1,2,3,4,5,7,8};

		PatternDBSlidingSquareUsingLong startingPos=new PatternDBSlidingSquareUsingLong((byte)4,(byte)4, vals, availableValues);
		System.out.println(startingPos);
		PatternDBSlidingSquareNode pdssn=new PatternDBSlidingSquareNode(startingPos);
		Action<PatternDBSlidingSquareNode, Boolean> action=new Action<PatternDBSlidingSquareNode, Boolean>()
		{
			int i=0;
			@Override
			public void performAction(PatternDBSlidingSquareNode node) {
				if(i++%1000000==0)
					System.out.println(i);
			}

			@Override
			public boolean complete() {
				return false;
			}

			@Override
			public Boolean getValue() {
				return null;
			}

		};
		String filename = "/home/edward/Research/generatePatternDBFiles/15Squareresults_disjoint_2.out";
		FifteenSquareBFS.BFS(pdssn, action, availableValues, filename);
		FifteenSquareDisjointMain_2.BFS;
	}

}
