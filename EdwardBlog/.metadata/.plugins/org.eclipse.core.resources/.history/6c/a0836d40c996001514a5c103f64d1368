package generatePatternDatabase;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.LinkedList;
import java.util.List;

public class FileSystem implements StorageSystem {

	
	private String defaultFileLocation;

	@Override
	public void addMultiple(String[] location, String []value, int[] numToDestination) {
		String currentLocation=null;
		RandomAccessFile f = null;
		List<String> currentFile=new LinkedList<String>();
		for(int i=0; i<location.length; i++)
		{
			if(currentLocation==null || location[i]!=currentLocation)
			{
				currentLocation=location[i];
				if(f!=null)
					try {
						f.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				BufferedReader br=null;
				try {
					 br=new BufferedReader(new FileReader(currentLocation));
					for(;;)
					{
						String line=br.readLine();
						if(line==null)
							break;
						currentFile.add(line);
					}
					
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				finally{
					try {
						br.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
				
			}
			
		}
	}

	@Override
	public boolean exists(String location, String value) {
		String filename=defaultFileLocation+location;
		File f=new File(filename);
		if(f.exists())
		{
			//Open the file read until it gets to the correct position.
			BufferedReader br = null;
			try {
				 br=new BufferedReader(new FileReader(f));
				 for(;;)
				 {
					 String val=br.readLine();
					 if(val==null)
						 return false;
					 if(val.split("\0")[0].equals(value))
						 return true;
				 }
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			finally{ 
				try {
				br.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
				}
		}
		else
			return false;
		return false;
	}

}
